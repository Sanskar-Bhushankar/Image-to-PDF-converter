/* Keep nav styles */
.main-nav {
  display: flex;
  justify-content: center;
  gap: 20px;
  padding: 15px;
  background-color: #333; /* Dark background for nav */
  border-radius: 8px;
  margin-bottom: 30px; /* Space below nav */
  flex-shrink: 0; /* Prevent nav from shrinking */
}

.main-nav a {
  color: #e0e0e0;
  text-decoration: none;
  padding: 8px 15px;
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

.main-nav a:hover,
.main-nav a.active { /* You might need NavLink for active class styling */
  background-color: #4a9eff;
  color: #fff;
}

/* Styles for the main App container - Simplified */
.App {
  /* Remove max-width and margin - #root handles centering */
  /* max-width: 1100px; */
  /* margin-left: auto; */
  /* margin-right: auto; */

  /* Keep padding if you want space *inside* the components, relative to the nav/footer */
  padding: 0 1rem 2rem 1rem;
}

/* Ensure #root doesn't constrain width unnecessarily */
/* It's often better to let body or html handle background and .App handle content structure */
/* #root { */
  /* max-width: 1280px; */ /* Remove this if present */
  /* margin: 0 auto; */ /* Remove this if present */
/* } */

/* If the above doesn't work, try this flexbox approach on .App */
/* .App {
  display: flex;
  flex-direction: column;
  align-items: center; // Center items horizontally
  padding: 0 1rem 2rem 1rem;
  min-height: calc(100vh - 80px); // Adjust based on nav height if footer needs pushing
} */

/* Remove other potentially conflicting styles like .logo, .card, etc. */
/* unless they are still actively used in the new structure */
